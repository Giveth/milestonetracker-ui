/* eslint-disable */
import w3 from 'web3';
import { deploymentActions } from '../constants';

let web3;
if (typeof window.web3 !== 'undefined') {
  web3 = new w3(window.web3.currentProvider);
} else {
  web3 = new w3(new w3.providers.HttpProvider('http://localhost:8545'));
}

let currentNetwork;
let _campaignTrackerAddress
const networks = {
    1: 'Main',
    2: 'Morden',
    3: 'Ropsten',
    4: 'Testrpc'
};
const campaignTrackerContractLocations = {
    'Main': '0x26104cd17cc77e510ef20adf11ecb682ca7760f0',
    'Morden': '0x0',
    'Ropsten': '0x53fc022DD190F0b37A5501FeE92171Ed1C7CD4Eb',
    'Testrpc': '0xe78a0f7e598cc8b0bb87894b0f60dd2a88d6a8ab'
};

web3.version.getNetwork((e, result) => {
    currentNetwork = result < 4 ? networks[result] : networks[4];
    _campaignTrackerAddress = campaignTrackerContractLocations[currentNetwork];
    console.log(`Connected to the ${currentNetwork} network.  Campaign Tracker is at ${_campaignTrackerAddress}`);
});

let fromAccount, _escapeCaller, _escapeDestination, _securityGuard, _arbitrator, _donor, _recipient, _tokenName, _tokenSymbol, _campaignTracker, _campaignName, _campaignDescription, _campaignUrl, _campaignExtra, _gasPrice;
let instances = {};
let response = [];

//update with user-provided values
export function updateCampaignValues(data) {
    return {
        type: deploymentActions.UPDATE_CAMPAIGN_VALUES,
        payload: { data }
    }
}

//reset all values to their initial state.
export function reset() {
    return { type: deploymentActions.RESET };
}

export function cancel() {
    return { type: deploymentActions.CANCEL };
}

//RUN_UNSTARTED, RUN_IN_PROGRESS, RUN_COMPLETE, RUN_ERROR
function updateDeploymentStatus(status) {
    return {
        type: status,
        payload: { data: status }
    }
}

//Marking Individual deployments as complete for User notification.
function deploymentComplete(data) {
  return {
    type: deploymentActions.DEPLOYMENT_COMPLETE,
    payload: { data }
  }
}

//set the current step in the deployment process.
function updateCurrentDeploymentStep(data) {
    return {
        type: deploymentActions.UPDATE_DEPLOYMENT_STEP,
        payload: { data }
    }
}

//show errors on the UI
function showError(message, stacktrace) {
    return {
        type: deploymentActions.RUN_ERROR,
        payload: { data: { message, stacktrace } }
    }
}

//set the results (addresses and tx hashes) of all deployments when the full deployment chain has completed for UI display.
function setDeploymentResults(data) {
    return {
        type: deploymentActions.SET_DEPLOYMENT_RESULTS,
        payload: { data }
    }
}

/*********************************
            THUNKS
*********************************/

//create and deploy each contract serially.
export function runDeployment(userAccount, campaignValues) {
    fromAccount = userAccount;
    _escapeCaller = campaignValues.escapeCaller;
    _escapeDestination = campaignValues.escapeDestination;
    _securityGuard = campaignValues.securityGuard;
    _arbitrator = campaignValues.arbitrator;
    _donor = campaignValues.donor;
    _recipient = campaignValues.recipient;
    _tokenName = campaignValues.tokenName;
    _tokenSymbol = campaignValues.tokenSymbol;
    _campaignName = campaignValues.campaignName;
    _campaignDescription = campaignValues.campaignDescription;
    _campaignUrl = campaignValues.campaignUrl;
    _campaignExtra = campaignValues.campaignExtra
  return dispatch => {
    dispatch(updateDeploymentStatus(deploymentActions.RUN_IN_PROGRESS));
    return getGasPrice()
        .then(setGasPrice)
        .then(() => minimetokenfactoryContract(dispatch))
        .then((result) => deployMiniMeTokenFactoryContract(result, dispatch))
        .then(miniMeTokenContract)
        .then((result) => deployMiniMeTokenContract(result, dispatch))
        .then(vaultContract)
        .then((result) => deployVaultContract(result, dispatch))
        .then(campaignContract)
        .then((result) => deployCampaignContract(result, dispatch))
        .then(() => changeMiniMeTokenController(dispatch))
        .then(milestoneTrackerContract)
        .then((result) => deployMilestoneTrackerContract(result, dispatch))
        .then(() => authorizeSpender(dispatch))
        // .then(getGivethDirectoryInstance) //remove if not an owner of the Campaign Directory
        // .then((result) => addCampaignToTracker(result, dispatch))  //remove if not an owner of the Campaign Directory
        .then((data) => console.log(data))
        .then((data) => console.log("ALL COMPLETE"))
        .then((data) => {
            console.log("RESPONSE", response);
            response.push({
              campaignDetails: {
                tokenName: _tokenName,
                tokenSymbol: _tokenSymbol,
                campaignName: _campaignName,
                campaignDescription: _campaignDescription,
                campaignUrl: _campaignUrl,
                campaignExtra: _campaignExtra
              }
            });
            dispatch(setDeploymentResults(response));
            dispatch(updateDeploymentStatus(deploymentActions.RUN_COMPLETE));
        });
  }
}


/*********************************
    BLOCKCHAIN OPERATIONS
*********************************/
const getGasPrice = () => {
    console.log("RETRIEVING GAS PRICE");
    return new Promise((resolve, reject) => {
        web3.eth.getGasPrice((err, result) => {
            resolve(result);
        });
    });
}

const setGasPrice = (data) => {
    console.log("GAS PRICE: " + data);
    return new Promise((resolve, reject) => {
        _gasPrice = data;
        resolve("STARTING DEPLOYMENT");
    });
}

/**********************************
    Create the MiniMe Token Factory
**********************************/
const minimetokenfactoryContractAbi = [{
    "constant":false,"inputs":[{"name":"_parentToken","type":"address"},{"name":"_snapshotBlock","type":"uint256"},{"name":"_tokenName","type":"string"},{"name":"_decimalUnits","type":"uint8"},{"name":"_tokenSymbol","type":"string"},{"name":"_transfersEnabled","type":"bool"}],"name":"createCloneToken","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"
}];

const minimetokenfactoryContract = (dispatch) => {
    console.log('CREATING MINIME TOKEN FACTORY');
    dispatch(updateCurrentDeploymentStep('miniMeTokenFactoryContract'));
    return new Promise((resolve, reject) => {
        resolve(web3.eth.contract(minimetokenfactoryContractAbi));
    });
}

/**********************************
    Deploy the MiniMe Token Factory
**********************************/
const deployMiniMeTokenFactoryContract = (miniMeTokenFactoryContract, dispatch) => {
    console.log('DEPLOYING MINIME TOKEN FACTORY');
    return new Promise((resolve, reject) => miniMeTokenFactoryContract.new({
            from: fromAccount,
            data: '0x606060405234610000575b611f3c806100196000396000f300606060405263ffffffff60e060020a6000350416635b7b72c18114610024575b610000565b3461000057604080516020600460443581810135601f81018490048402850184019095528484526100cd948235600160a060020a031694602480359560649492939190920191819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989a60ff8b35169a9099940197509195509182019350915081908401838280828437509496505050509135151591506100e99050565b60408051600160a060020a039092168252519081900360200190f35b6000600030888888888888604051611c52806102bf8339018088600160a060020a0316600160a060020a0316815260200187600160a060020a0316600160a060020a03168152602001868152602001806020018560ff1660ff1681526020018060200184151515158152602001838103835287818151815260200191508051906020019080838360008314610199575b80518252602083111561019957601f199092019160209182019101610179565b505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b5083810382528551815285516020918201918701908083838215610204575b80518252602083111561020457601f1990920191602091820191016101e4565b505050905090810190601f1680156102305780820380516001836020036101000a031916815260200191505b509950505050505050505050604051809103906000f0801561000057905080600160a060020a0316633cebb823336040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b156100005760325a03f115610000575050508091505b509695505050505050560060a0604052600760608190527f4d4d545f302e310000000000000000000000000000000000000000000000000060809081526004805460008290527f4d4d545f302e310000000000000000000000000000000000000000000000000e825590927f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b602060026001851615610100026000190190941693909304601f0192909204820192909190620000db565b82800160010185558215620000db579182015b82811115620000db578251825591602001919060010190620000be565b5b50620000ff9291505b80821115620000fb5760008155600101620000e5565b5090565b505034620000005760405162001c5238038062001c5283398101604090815281516020830151918301516060840151608085015160a086015160c0870151949693949284019391929101905b5b60008054600160a060020a03191633600160a060020a03161790555b86600b60016101000a815481600160a060020a030219169083600160a060020a031602179055508360019080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b5b50620002319291505b80821115620000fb5760008155600101620000e5565b5090565b50506002805460ff191660ff8516178155825160038054600082905290927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b60206101006001851615026000190190931691909104601f90810183900482019392870190839010620002af57805160ff1916838001178555620002df565b82800160010185558215620002df579182015b82811115620002df578251825591602001919060010190620002c2565b5b50620003039291505b80821115620000fb5760008155600101620000e5565b5090565b505060058054600160a060020a031916600160a060020a0388161790556006859055600b805460ff1916821515179055436007555b505050505050505b61190280620003506000396000f300606060405236156101225763ffffffff60e060020a60003504166306fdde0381146101d9578063095ea7b314610266578063176345141461029657806318160ddd146102b557806323b872dd146102d4578063313ce5671461030a5780633cebb8231461032d5780634ee2cd7e1461034857806354fd4d50146103765780636638c0871461040357806370a08231146104c057806380a54001146104eb578063827f32c01461051457806395d89b4114610544578063981b24d0146105d1578063a9059cbb146105f3578063bef97c8714610623578063c5bcc4f114610644578063cae9ca5114610663578063d3ce77fe146106d7578063dd62ed3e14610707578063e77772fe14610738578063f41e60c514610761578063f77c479114610775575b6101d75b60005461013b90600160a060020a031661079e565b156101cf57600080546040805160209081019390935280517ff48c3054000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301529151919092169263f48c30549234926024808301939282900301818588803b156100005761235a5a03f11561000057505060405151151591506101ca905057610000565b6101d4565b610000565b5b565b005b34610000576101e66107cb565b60408051602080825283518183015283519192839290830191850190808383821561022c575b80518252602083111561022c57601f19909201916020918201910161020c565b505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610282600160a060020a0360043516602435610858565b604080519115158252519081900360200190f35b34610000576102a36109c0565b60408051918252519081900360200190f35b34610000576102a36109c6565b60408051918252519081900360200190f35b3461000057610282600160a060020a03600435811690602435166044356109d7565b604080519115158252519081900360200190f35b3461000057610317610a79565b6040805160ff9092168252519081900360200190f35b34610000576101d7600160a060020a0360043516610a82565b005b34610000576102a3600160a060020a0360043516602435610aca565b60408051918252519081900360200190f35b34610000576101e6610c20565b60408051602080825283518183015283519192839290830191850190808383821561022c575b80518252602083111561022c57601f19909201916020918201910161020c565b505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610000576104a4600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989a60ff8b35169a909994019750919550918201935091508190840183828082843750949650508435946020013515159350610cae92505050565b60408051600160a060020a039092168252519081900360200190f35b34610000576102a3600160a060020a0360043516610f02565b60408051918252519081900360200190f35b34610000576104a4610f16565b60408051600160a060020a039092168252519081900360200190f35b3461000057610282600160a060020a0360043516602435610f25565b604080519115158252519081900360200190f35b34610000576101e6610fde565b60408051602080825283518183015283519192839290830191850190808383821561022c575b80518252602083111561022c57601f19909201916020918201910161020c565b505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34610000576102a360043561106c565b60408051918252519081900360200190f35b3461000057610282600160a060020a0360043516602435611173565b604080519115158252519081900360200190f35b346100005761028261119b565b604080519115158252519081900360200190f35b34610000576102a36111a4565b60408051918252519081900360200190f35b3461000057604080516020600460443581810135601f8101849004840285018401909552848452610282948235600160a060020a03169460248035956064949293919092019181908401838280828437509496506111aa95505050505050565b604080519115158252519081900360200190f35b3461000057610282600160a060020a036004351660243561135b565b604080519115158252519081900360200190f35b34610000576102a3600160a060020a036004358116906024351661142d565b60408051918252519081900360200190f35b34610000576104a461145a565b60408051600160a060020a039092168252519081900360200190f35b34610000576101d7600435151561146e565b005b34610000576104a461149c565b60408051600160a060020a039092168252519081900360200190f35b600080600160a060020a03831615156107ba57600091506107c5565b823b90506000811191505b50919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b505050505081565b600b5460009060ff16151561086c57610000565b811580159061089f5750600160a060020a0333811660009081526009602090815260408083209387168352929052205415155b156108a957610000565b6000546108be90600160a060020a031661079e565b15610958576000805460408051602090810184905281517fda682aeb000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301528881166024830152604482018890529251929093169363da682aeb9360648082019492918390030190829087803b156100005760325a03f115610000575050604051511515905061095857610000565b5b600160a060020a03338116600081815260096020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060015b92915050565b60075481565b60006109d14361106c565b90505b90565b6000805433600160a060020a03908116911614610a6457600b5460ff1615156109ff57610000565b600160a060020a038085166000908152600960209081526040808320339094168352929052205482901015610a3657506000610a72565b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b610a6f8484846114ab565b90505b9392505050565b60025460ff1681565b60005433600160a060020a03908116911614610a9d57610000565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b6000600754821015610ade575060006109ba565b600160a060020a0383166000908152600860205260409020541580610b3d5750600160a060020a0383166000908152600860205260408120805484929081101561000057906000526020600020900160005b50546001608060020a0316115b15610bef57600554600160a060020a031615610be257600554600654604080516000602091820181905282517f4ee2cd7e000000000000000000000000000000000000000000000000000000008152600160a060020a038981166004830152602482019590955292519390941693634ee2cd7e936044808501949192918390030190829087803b156100005760325a03f1156100005750506040515191506109ba9050565b5060006109ba565b6109ba565b600160a060020a0383166000908152600860205260409020610c11908361166b565b90506109ba565b5b5b92915050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b505050505081565b6000600043841115610cbe574393505b600b60019054906101000a9004600160a060020a0316600160a060020a0316635b7b72c130868a8a8a896000604051602001526040518763ffffffff1660e060020a0281526004018087600160a060020a0316600160a060020a03168152602001868152602001806020018560ff1660ff1681526020018060200184151515158152602001838103835287818151815260200191508051906020019080838360008314610d86575b805182526020831115610d8657601f199092019160209182019101610d66565b505050905090810190601f168015610db25780820380516001836020036101000a031916815260200191505b5083810382528551815285516020918201918701908083838215610df1575b805182526020831115610df157601f199092019160209182019101610dd1565b505050905090810190601f168015610e1d5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b156100005760325a03f1156100005750506040805180517f3cebb823000000000000000000000000000000000000000000000000000000008252600160a060020a03338116600484015292519094509184169250633cebb82391602480830192600092919082900301818387803b156100005760325a03f115610000575050604080518681529051600160a060020a03841692507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade9181900360200190a28091505b5095945050505050565b6000610f0e8243610aca565b90505b919050565b600554600160a060020a031681565b600080548190819033600160a060020a03908116911614610f4557610000565b610f50600a4361166b565b9150610f5f600a8584016117bb565b610f6885610f02565b600160a060020a0386166000908152600860205260409020909150610f8f908583016117bb565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3600192505b5b505092915050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b505050505081565b600060075482101561108057506000610f11565b600a5415806110b3575081600a6000815481101561000057906000526020600020900160005b50546001608060020a0316115b1561115a57600554600160a060020a03161561114d57600554600654604080516000602091820181905282517f981b24d000000000000000000000000000000000000000000000000000000000815260048101949094529151600160a060020a039094169363981b24d093602480820194918390030190829087803b156100005760325a03f115610000575050604051519150610f119050565b506000610f11565b610f11565b611165600a8361166b565b9050610f11565b5b5b919050565b600b5460009060ff16151561118757610000565b6111923384846114ab565b90505b92915050565b600b5460ff1681565b60065481565b600160a060020a03338116600081815260096020908152604080832094881680845294825280832087905580518781529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a383600160a060020a031660405180807f72656365697665417070726f76616c28616464726573732c75696e743235362c81526020017f616464726573732c627974657329000000000000000000000000000000000000815250602e019050604051809103902060e060020a9004338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a031681526020018280519060200190808383600083146112fc575b8051825260208311156112fc57601f1990920191602091820191016112dc565b505050905090810190601f1680156113285780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000876161da5a03f192505050151561135057610000565b5060015b9392505050565b600080548190819033600160a060020a0390811691161461137b57610000565b611386600a4361166b565b91508382101561139557610000565b6113a2600a8584036117bb565b6113ab85610f02565b9050838110156113ba57610000565b600160a060020a03851660009081526008602052604090206113de908583036117bb565b604080518581529051600091600160a060020a038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3600192505b5b505092915050565b600160a060020a038083166000908152600960209081526040808320938516835292905220545b92915050565b600b546101009004600160a060020a031681565b60005433600160a060020a0390811691161461148957610000565b600b805460ff19168215151790555b5b50565b600054600160a060020a031681565b600080808315156114bf5760019250611662565b600160a060020a03851615806114e6575030600160a060020a031685600160a060020a0316145b156114f057610000565b6114fa8643610aca565b91508382101561150d5760009250611662565b60005461152290600160a060020a031661079e565b156115bc576000805460408051602090810184905281517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a038b811660048301528a81166024830152604482018a905292519290931693634a3931499360648082019492918390030190829087803b156100005760325a03f11561000057505060405151151590506115bc57610000565b5b600160a060020a03861660009081526008602052604090206115e1908584036117bb565b6115eb8543610aca565b600160a060020a0386166000908152600860205260409020909150611612908583016117bb565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3600192505b50509392505050565b600060006000600085805490506000141561168957600093506117b2565b8554869060001981019081101561000057906000526020600020900160005b50546001608060020a031685106116f1578554869060001981019081101561000057906000526020600020900160005b5054608060020a90046001608060020a031693506117b2565b856000815481101561000057906000526020600020900160005b50546001608060020a031685101561172657600093506117b2565b8554600093506000190191505b82821115611784576002600183850101049050848682815481101561000057906000526020600020900160005b50546001608060020a0316116117785780925061177f565b6001810391505b611733565b8583815481101561000057906000526020600020900160005b5054608060020a90046001608060020a031693505b50505092915050565b8154600090819015806117f7575083544390859060001981019081101561000057906000526020600020900160005b50546001608060020a0316105b15611894578384805480919060010181548183558181151161183e5760008381526020902061183e9181019083015b8082111561183a5760008155600101611826565b5090565b5b505050815481101561000057906000526020600020900160005b5080546001608060020a03858116608060020a024382166fffffffffffffffffffffffffffffffff19909316929092171617815591506118cf565b8354849060001981019081101561000057906000526020600020900160005b5080546001608060020a03808616608060020a02911617815590505b5b505050505600a165627a7a72305820534fa6896ab44cb86ed72db127ea875423574b96d19baf8a3afc3ede492d7aa30029a165627a7a723058202c439fb16f4fa3a0533d4366c1cfc4835e77658873c225129a2c6bbc3f351ce00029',
            gas: '3900000',
            gasPrice: _gasPrice*1.05
            }, (e, contract) => {
                if(e) {
                    console.log("Error", e);
                    dispatch(showError('Mini Me Token Factory Contract Deployment Failed',  e.message));
                    reject(e);
                } else if (typeof contract.address !== 'undefined') {
                    console.log('MiniMe Token Factory Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    instances['miniMeTokenFactoryInstance'] = miniMeTokenFactoryContract.at(contract.address);
                    response.push({
                        contract: 'Mini Me Token Factory',
                        address: contract.address,
                        transactionHash: contract.transactionHash,
                        ABI: minimetokenfactoryContractAbi
                    })
                    dispatch(deploymentComplete('miniMeTokenFactoryContract'));
                    dispatch(updateCurrentDeploymentStep('miniMeTokenContract'));
                    resolve('Mini Me Token Factory Complete!');
                }
            }))
};

/*********************************
    Create the MiniMe Token Contract
  **********************************/
const miniMeTokenContractAbi = [
    {"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_amount","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"creationBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newController","type":"address"}],"name":"changeController","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_blockNumber","type":"uint256"}],"name":"balanceOfAt","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"version","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_cloneTokenName","type":"string"},{"name":"_cloneDecimalUnits","type":"uint8"},{"name":"_cloneTokenSymbol","type":"string"},{"name":"_snapshotBlock","type":"uint256"},{"name":"_transfersEnabled","type":"bool"}],"name":"createCloneToken","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"parentToken","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"},{"name":"_amount","type":"uint256"}],"name":"generateTokens","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"transfersEnabled","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"parentSnapShotBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_amount","type":"uint256"},{"name":"_extraData","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"},{"name":"_amount","type":"uint256"}],"name":"destroyTokens","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"tokenFactory","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_transfersEnabled","type":"bool"}],"name":"enableTransfers","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"controller","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[{"name":"_tokenFactory","type":"address"},{"name":"_parentToken","type":"address"},{"name":"_parentSnapShotBlock","type":"uint256"},{"name":"_tokenName","type":"string"},{"name":"_decimalUnits","type":"uint8"},{"name":"_tokenSymbol","type":"string"},{"name":"_transfersEnabled","type":"bool"}],"payable":false,"type":"constructor"},{"payable":true,"type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_cloneToken","type":"address"},{"indexed":false,"name":"_snapshotBlock","type":"uint256"}],"name":"NewCloneToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_owner","type":"address"},{"indexed":true,"name":"_spender","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Approval","type":"event"}
];

const miniMeTokenContract = () => {
    console.log('CREATING MINIME TOKEN CONTRACT');
    return new Promise((resolve, reject) => {
        resolve({
            _tokenFactory: instances['miniMeTokenFactoryInstance'].address,
            _parentToken: 0,
            _parentSnapShotBlock: 0,
            _tokenName: _tokenName,
            _decimalUnits: 16,
            _tokenSymbol: _tokenSymbol,
            _transfersEnabled: true,
            contract: web3.eth.contract(miniMeTokenContractAbi)});
    });
}

/**********************************
    Deploy the MiniMe Token Contract
**********************************/
const deployMiniMeTokenContract = (...args) => {
    console.log('DEPLOYING MINIME TOKEN CONTRACT');
    const data = args[0];
    let dispatch = args[1];
    return new Promise((resolve, reject) => data.contract.new(
        data._tokenFactory,
        data._parentToken,
        data._parentSnapShotBlock,
        data._tokenName,
        data._decimalUnits,
        data._tokenSymbol,
        data._transfersEnabled,
        {
            from: fromAccount,
            data: '',
            gas: '3900000',
            gasPrice: _gasPrice*1.05
            },  (e, contract) => {
                if(e) {
                    console.log("Error", e);
                    dispatch(showError('Mini Me Token Contract Deployment Failed',  e.message));
                    reject(e);
                } else if (typeof contract.address !== 'undefined') {
                    console.log('MiniMe Token Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    instances['minimetokenContractInstance'] = data.contract.at(contract.address);
                    response.push({
                        contract: 'Mini Me Token Contract',
                        address: contract.address,
                        transactionHash: contract.transactionHash,
                        ABI: miniMeTokenContractAbi
                    });
                    dispatch(deploymentComplete('miniMeTokenContract'));
                    dispatch(updateCurrentDeploymentStep('vaultContract'));
                    resolve('Mini Me Contract Complete.');
                }
        }))
}

/**********************************
    Create the Vault Contract
**********************************/
const vaultContractAbi = [
    {"constant":true,"inputs":[],"name":"maxSecurityGuardDelay","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"escapeHatch","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newTimeLock","type":"uint256"}],"name":"setTimelock","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newEscapeCaller","type":"address"}],"name":"changeEscapeCaller","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"numberOfAuthorizedPayments","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_authorize","type":"bool"}],"name":"authorizeSpender","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idPayment","type":"uint256"}],"name":"cancelPayment","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idPayment","type":"uint256"},{"name":"_delay","type":"uint256"}],"name":"delayPayment","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_description","type":"string"},{"name":"_recipient","type":"address"},{"name":"_amount","type":"uint256"},{"name":"_paymentDelay","type":"uint256"}],"name":"authorizePayment","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idPayment","type":"uint256"}],"name":"collectAuthorizedPayment","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"authorizedPayments","outputs":[{"name":"description","type":"string"},{"name":"spender","type":"address"},{"name":"earliestPayTime","type":"uint256"},{"name":"canceled","type":"bool"},{"name":"paid","type":"bool"},{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"},{"name":"securityGuardDelay","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"receiveEther","outputs":[],"payable":true,"type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"securityGuard","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newSecurityGuard","type":"address"}],"name":"setSecurityGuard","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"escapeDestination","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"timeLock","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"allowedSpenders","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_maxSecurityGuardDelay","type":"uint256"}],"name":"setMaxSecurityGuardDelay","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"absoluteMinTimeLock","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"escapeCaller","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[{"name":"_escapeCaller","type":"address"},{"name":"_escapeDestination","type":"address"},{"name":"_absoluteMinTimeLock","type":"uint256"},{"name":"_timeLock","type":"uint256"},{"name":"_securityGuard","type":"address"},{"name":"_maxSecurityGuardDelay","type":"uint256"}],"payable":false,"type":"constructor"},{"payable":true,"type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"idPayment","type":"uint256"},{"indexed":true,"name":"recipient","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"PaymentAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"idPayment","type":"uint256"},{"indexed":true,"name":"recipient","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"PaymentExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"idPayment","type":"uint256"}],"name":"PaymentCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"EtherReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"authorized","type":"bool"}],"name":"SpenderAuthorization","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"amount","type":"uint256"}],"name":"EscapeCalled","type":"event"}
];

const vaultContract = () => {
    console.log('CREATING VAULT CONTRACT');
    return new Promise((resolve, reject) => {
        resolve({
            _absoluteMinTimeLock: 3600,
            _timeLock: 86400,
            _maxSecurityGuardDelay: 86400*14,
            contract: web3.eth.contract(vaultContractAbi)});
    });
}

/**********************************
    Deploy the Vault Contract
**********************************/
const deployVaultContract = (...args) => {
    console.log('DEPLOYING VAULT CONTRACT');
    const data = args[0];
    let dispatch = args[1];
    return new Promise((resolve, reject) => data.contract.new(
        _escapeCaller,
        _escapeDestination,
        data._absoluteMinTimeLock,
        data._timeLock,
        _securityGuard,
        data._maxSecurityGuardDelay,
        {
            from: fromAccount,
            data: '0x6060604052341561000c57fe5b60405160c080610f9483398101604090815281516020830151918301516060840151608085015160a090950151929491929091905b85855b5b60008054600160a060020a03191633600160a060020a03161790555b60018054600160a060020a03808516600160a060020a03199283161790925560028054928416929091169190911790555b50506005849055600683905560048054600160a060020a031916600160a060020a03841617905560078190555b5050505050505b610ebf806100d56000396000f3006060604052361561010c5763ffffffff60e060020a6000350416630b2e7423811461011d5780631554611f1461013f5780631e891c0a146101515780631f6eb6e71461016657806320ea253314610192578063681617c71461021657806368b8c5a114610234578063793c0fd4146102565780638422927d14610279578063846a5dde1461028e5780638da5cb5b146102a657806392e4b8a4146102d2578063a0927a6a146102e7578063a3912ec8146103d5578063a6f9dae1146103df578063b2ca3ec4146103fd578063bb2a51d114610429578063d085835a14610447578063d8528af014610469578063da4793ac14610499578063ea8a66c7146104ae578063f5b61230146104d0575b61011b5b6101186104fc565b5b565b005b341561012557fe5b61012d61053e565b60408051918252519081900360200190f35b341561014757fe5b61011b610544565b005b341561015957fe5b61011b6004356105f1565b005b341561016e57fe5b610176610627565b60408051600160a060020a039092168252519081900360200190f35b341561019a57fe5b61012d600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050843594600160a060020a036020820135169450604081013593506060013591506106369050565b60408051918252519081900360200190f35b341561021e57fe5b61011b600160a060020a036004351661079e565b005b341561023c57fe5b61012d6107f7565b60408051918252519081900360200190f35b341561025e57fe5b61011b600160a060020a036004351660243515156107fe565b005b341561028157fe5b61011b60043561087c565b005b341561029657fe5b61011b600435602435610936565b005b34156102ae57fe5b6101766109f0565b60408051600160a060020a039092168252519081900360200190f35b34156102da57fe5b61011b6004356109ff565b005b34156102ef57fe5b6102fa600435610b85565b60408051602081018a9052600160a060020a03808a169282019290925260608101889052861515608082015285151560a082015290841660c082015260e081018390526101008082018390526101208083528b546002600182161590930260001901169190910490820181905281906101408201908c9080156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b50509a505050505050505050505060405180910390f35b61011b6104fc565b005b34156103e757fe5b61011b600160a060020a0360043516610bf2565b005b341561040557fe5b610176610c5f565b60408051600160a060020a039092168252519081900360200190f35b341561043157fe5b61011b600160a060020a0360043516610c6e565b005b341561044f57fe5b61012d610caa565b60408051918252519081900360200190f35b341561047157fe5b610485600160a060020a0360043516610cb0565b604080519115158252519081900360200190f35b34156104a157fe5b61011b600435610cc5565b005b34156104b657fe5b61012d610ceb565b60408051918252519081900360200190f35b34156104d857fe5b610176610cf1565b60408051600160a060020a039092168252519081900360200190f35b604080513481529051600160a060020a033316917f1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b919081900360200190a25b565b60075481565b60015460009033600160a060020a03908116911614801590610575575060005433600160a060020a03908116911614155b156105805760006000fd5b50600254604051600160a060020a033081163192169082156108fc029083906000818181858888f1935050505015156105b95760006000fd5b6040805182815290517f3a7a1ba90aaa86fa9f6b921c3d600a5c870f8ebd05e7fbd30f93930f3caa5db59181900360200190a15b5b50565b60005433600160a060020a0390811691161461060d5760006000fd5b60055481101561061d5760006000fd5b60068190555b5b50565b600154600160a060020a031681565b600160a060020a0333166000908152600860205260408120548190819060ff1615156106625760006000fd5b60038054925082906106779060018301610d00565b50600380548390811061068657fe5b906000526020600020906007020160005b50600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a76400008411156106cd5760006000fd5b6006548410156106e15760065442016106e5565b8342015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a0389160217905560058101859055875161073490829060208b0190610d32565b5060018101879055600481015460058201546040805191825251600160a060020a0362010000909304929092169184917f47e9633c99dd05fabd1b937e7c85f9e00d6866bfd2e5885e0091f40a173be3d3919081900360200190a38192505b505095945050505050565b60015433600160a060020a039081169116148015906107cc575060005433600160a060020a03908116911614155b156107d75760006000fd5b60018054600160a060020a031916600160a060020a0383161790555b5b50565b6003545b90565b60005433600160a060020a0390811691161461081a5760006000fd5b600160a060020a038216600081815260086020908152604091829020805460ff1916851515908117909155825190815291517f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c8272819281900390910190a25b5b5050565b6000805433600160a060020a039081169116146108995760006000fd5b60035482106108a85760006000fd5b60038054839081106108b657fe5b906000526020600020906007020160005b50600481015490915060ff16156108de5760006000fd5b6004810154610100900460ff16156108f65760006000fd5b60048101805460ff1916600117905560405182907ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30190600090a25b5b5050565b60045460009033600160a060020a039081169116146109555760006000fd5b60035483106109645760006000fd5b670de0b6b3a764000082111561097a5760006000fd5b600380548490811061098857fe5b906000526020600020906007020160005b5090506007548282600601540111806109bb57506004810154610100900460ff165b806109ca5750600481015460ff165b156109d55760006000fd5b60068101805483019055600381018054830190555b5b505050565b600054600160a060020a031681565b6003546000908210610a115760006000fd5b6003805483908110610a1f57fe5b906000526020600020906007020160005b50600481015490915033600160a060020a03908116620100009092041614610a585760006000fd5b6002810154600160a060020a031660009081526008602052604090205460ff161515610a845760006000fd5b8060030154421015610a965760006000fd5b600481015460ff1615610aa95760006000fd5b6004810154610100900460ff1615610ac15760006000fd5b806005015430600160a060020a0316311015610add5760006000fd5b60048101805461010061ff00199091161790819055600582015460405162010000909204600160a060020a0316916108fc82150291906000818181858888f193505050501515610b2d5760006000fd5b600481015460058201546040805191825251600160a060020a0362010000909304929092169184917f7f5bfe3018715b26a7067888a5c42912fbb3485170b8154ea9a448661f2f0de2919081900360200190a35b5050565b6003805482908110610b9357fe5b906000526020600020906007020160005b506001810154600282015460038301546004840154600585015460068601549596509394600160a060020a0393841694929360ff808416946101008504909116936201000090049091169189565b60005433600160a060020a03908116911614610c0e5760006000fd5b60008054600160a060020a031916600160a060020a038381169182178355604051919233909116917f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b23649190a35b5b50565b600454600160a060020a031681565b60005433600160a060020a03908116911614610c8a5760006000fd5b60048054600160a060020a031916600160a060020a0383161790555b5b50565b60065481565b60086020526000908152604090205460ff1681565b60005433600160a060020a03908116911614610ce15760006000fd5b60078190555b5b50565b60055481565b600254600160a060020a031681565b8154818355818115116109ea576007028160070283600052602060002091820191016109ea9190610db1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d7357805160ff1916838001178555610da0565b82800160010185558215610da0579182015b82811115610da0578251825591602001919060010190610d85565b5b50610dad929150610e2a565b5090565b6107fb91905b80821115610dad576000610dcb8282610e4b565b50600060018201819055600282018054600160a060020a03191690556003820181905560048201805475ffffffffffffffffffffffffffffffffffffffffffff19169055600582018190556006820155600701610db7565b5090565b90565b6107fb91905b80821115610dad5760008155600101610e30565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610e7157506105ed565b601f0160209004906000526020600020908101906105ed9190610e2a565b5b505600a165627a7a72305820dd8149b751b405b692f95feb08ecb20f6a9994da768ce4427a7aa1d30c3ea2f30029',
            gas: '3900000',
            gasPrice: _gasPrice*1.05
            }, (e, contract) => {
                if(e) {
                    console.log("Error", e);
                    dispatch(showError('Vault Contract Deployment Failed',  e.message));
                    reject(e)
                }
                if (typeof contract.address !== 'undefined') {
                    console.log('Vault Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    instances['vaultContractInstance'] = data.contract.at(contract.address);
                    response.push({
                        contract: 'Vault Contract',
                        address: contract.address,
                        transactionHash: contract.transactionHash,
                        ABI: vaultContractAbi
                    });
                    dispatch(deploymentComplete('vaultContract'));
                    dispatch(updateCurrentDeploymentStep('campaignContract'));
                    resolve('Vault Complete.');
                }
            }));
}

/**********************************
    Create the Campaign Contract
**********************************/
const campaignContractAbi = [
    {"constant":true,"inputs":[],"name":"vaultAddress","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"onTransfer","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"tokenContract","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newVaultAddress","type":"address"}],"name":"setVault","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"maximumFunding","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"finalizeFunding","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"startFundingTime","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_amount","type":"uint256"}],"name":"onApprove","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"totalCollected","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"endFundingTime","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"proxyPayment","outputs":[{"name":"","type":"bool"}],"payable":true,"type":"function"},{"inputs":[{"name":"_startFundingTime","type":"uint256"},{"name":"_endFundingTime","type":"uint256"},{"name":"_maximumFunding","type":"uint256"},{"name":"_vaultAddress","type":"address"},{"name":"_tokenAddress","type":"address"}],"payable":false,"type":"constructor"},{"payable":true,"type":"fallback"}
];

const campaignContract = () => {
    console.log('CREATING CAMPAIGN CONTRACT');
    let now = + new Date();
    return new Promise((resolve, reject) => {
        resolve({
            _startFundingTime: (now/1000), // Converts the js Now to the Solidity now :-D
            _endFundingTime: (now/1000) + 86400*365*5, // This campaign will be live for 5 years after that no new tokens will be issued
            _maximumFunding: web3.toWei(10000), // This campaign will collect a maximum of 10,000 ETH after that no new tokens will be issued
            _tokenAddress: instances['minimetokenContractInstance'].address,
            _vaultAddress: instances['vaultContractInstance'].address,
            contract: web3.eth.contract(campaignContractAbi)
        });
    });
}

/**********************************
    Deploy the Campaign Contract
**********************************/
const deployCampaignContract = (...args) => {
    console.log('DEPLOYING CAMPAIGN CONTRACT');
    const data = args[0];
    let dispatch = args[1];
    return new Promise((resolve, reject) => data.contract.new(
        data._startFundingTime,
        data._endFundingTime,
        data._maximumFunding,
        data._vaultAddress,
        data._tokenAddress,
        {
            from: fromAccount,
            data: '0x6060604052346100005760405160a08061069e83398101604090815281516020830151918301516060840151608090940151919390915b5b60008054600160a060020a03191633600160a060020a03161790555b428410806100615750848411155b80610075575069021e19e0c9bab240000083115b806100875750600160a060020a038216155b1561009157610000565b60018590556002849055600383905560058054600160a060020a03808416600160a060020a03199283161790925560068054928516929091169190911790555b50505050505b6105b8806100e66000396000f300606060405236156100a95763ffffffff60e060020a600035041663430bf08a81146100bb5780634a393149146100e457806355a373d61461011a5780636817031b146101435780638da5cb5b1461015e57806399d64ab014610187578063a19ed39d146101a6578063a6f9dae1146101b5578063b75ece9c146101d0578063da682aeb146100e4578063e29eb83614610225578063e4693e9814610244578063f48c305414610263575b6100b95b6100b63361028b565b5b565b005b34610000576100c8610412565b60408051600160a060020a039092168252519081900360200190f35b3461000057610106600160a060020a0360043581169060243516604435610421565b604080519115158252519081900360200190f35b34610000576100c861042b565b60408051600160a060020a039092168252519081900360200190f35b34610000576100b9600160a060020a036004351661043a565b005b34610000576100c8610482565b60408051600160a060020a039092168252519081900360200190f35b3461000057610194610491565b60408051918252519081900360200190f35b34610000576100b9610497565b005b34610000576100b9600160a060020a0360043516610514565b005b346100005761019461055c565b60408051918252519081900360200190f35b3461000057610106600160a060020a0360043581169060243516604435610421565b604080519115158252519081900360200190f35b346100005761019461056c565b60408051918252519081900360200190f35b3461000057610194610572565b60408051918252519081900360200190f35b610106600160a060020a0360043516610578565b604080519115158252519081900360200190f35b60015442108061029c575060025442115b806103205750600554604080516000602091820181905282517ff77c47910000000000000000000000000000000000000000000000000000000081529251600160a060020a039094169363f77c47919360048082019493918390030190829087803b156100005760325a03f11561000057505060405151600160a060020a03161590505b80610329575034155b8061033957506003543460045401115b1561034357610000565b6004805434908101909155600654604051600160a060020a039091169180156108fc02916000818181858888f19350505050151561038057610000565b600554604080516000602091820181905282517f827f32c0000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301523460248301529351939094169363827f32c0936044808301949391928390030190829087803b156100005760325a03f115610000575050604051511515905061040e57610000565b5b50565b600654600160a060020a031681565b60015b9392505050565b600554600160a060020a031681565b60005433600160a060020a0390811691161461045557610000565b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600054600160a060020a031681565b60035481565b6002544210156104a657610000565b600554604080517f3cebb8230000000000000000000000000000000000000000000000000000000081526000600482018190529151600160a060020a0390931692633cebb8239260248084019391929182900301818387803b156100005760325a03f115610000575050505b565b60005433600160a060020a0390811691161461052f57610000565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60015481565b60015b9392505050565b60045481565b60025481565b60006105838261028b565b5060015b9190505600a165627a7a72305820c2016dd9339b12f3dafdb6b9d44dc4407c7e473721a2c78a34b42849bf0de53d0029',
            gas: '3900000',
            gasPrice: _gasPrice*1.05
            }, (e, contract) => {
                if(e) {
                    console.log("Error", e);
                    dispatch(showError('Campaign Contract Deployment Failed',  e.message));
                    reject(e);
                } else if (typeof contract.address !== 'undefined') {
                    console.log('Campaign Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    instances['campaignContractInstance'] = data.contract.at(contract.address);
                    response.push({
                        contract: 'Campaign Contract',
                        address: contract.address,
                        transactionHash: contract.transactionHash,
                        ABI: campaignContractAbi
                    });
                    dispatch(deploymentComplete('campaignContract'));
                    dispatch(updateCurrentDeploymentStep('controllerUpdate'));
                    resolve('Campaign Complete.');
                }
            }));
}

/**********************************
    Change the Token Controller
**********************************/
const changeMiniMeTokenController = (dispatch) => {
    console.log("CHANGE MINIME TOKEN CONTROLLER");
    return new Promise((resolve, reject) => {
        instances['minimetokenContractInstance'].changeController(instances['campaignContractInstance'].address, {from: fromAccount}, (error, result) => {
            if(error) {
                console.log("Error", e);
                dispatch(showError('Mini Me Token Controller Update Failed',  e.message));
                reject(e);
            } else {
                console.log(`Mini Me Token Controller changed to ${instances['campaignContractInstance'].address}`);
                dispatch(deploymentComplete('controllerUpdate'));
                dispatch(updateCurrentDeploymentStep('milestoneTrackerContract'));
                resolve('MINIMI TOKEN CONTROLLER CHANGED');
            }
        });
    });
}

/**********************************
    Create the Milestone Tracker Contract
**********************************/
const milestoneTrackerContractAbi = [
    {"constant":true,"inputs":[],"name":"proposedMilestones","outputs":[{"name":"","type":"bytes"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"changingMilestones","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"campaignCanceled","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"unproposeMilestones","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"donor","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_hashProposals","type":"bytes32"}],"name":"acceptProposedMilestones","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idMilestone","type":"uint256"}],"name":"approveCompletedMilestone","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"recipient","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newMilestones","type":"bytes"}],"name":"proposeMilestones","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"arbitrator","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"arbitrateCancelCampaign","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newRecipient","type":"address"}],"name":"changeRecipient","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idMilestone","type":"uint256"}],"name":"requestMilestonePayment","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"numberOfMilestones","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idMilestone","type":"uint256"}],"name":"rejectMilestone","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newDonor","type":"address"}],"name":"changeDonor","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"milestones","outputs":[{"name":"description","type":"string"},{"name":"url","type":"string"},{"name":"minCompletionDate","type":"uint256"},{"name":"maxCompletionDate","type":"uint256"},{"name":"milestoneLeadLink","type":"address"},{"name":"reviewer","type":"address"},{"name":"reviewTime","type":"uint256"},{"name":"paymentSource","type":"address"},{"name":"payData","type":"bytes"},{"name":"status","type":"uint8"},{"name":"doneTime","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idMilestone","type":"uint256"}],"name":"markMilestoneComplete","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idMilestone","type":"uint256"}],"name":"arbitrateApproveMilestone","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_idMilestone","type":"uint256"}],"name":"cancelMilestone","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newArbitrator","type":"address"}],"name":"changeArbitrator","outputs":[],"payable":false,"type":"function"},{"inputs":[{"name":"_arbitrator","type":"address"},{"name":"_donor","type":"address"},{"name":"_recipient","type":"address"}],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[],"name":"NewMilestoneListProposed","type":"event"},{"anonymous":false,"inputs":[],"name":"NewMilestoneListUnproposed","type":"event"},{"anonymous":false,"inputs":[],"name":"NewMilestoneListAccepted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"idProposal","type":"uint256"},{"indexed":false,"name":"newProposal","type":"uint8"}],"name":"ProposalStatusChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"CampaignCanceled","type":"event"}
];

const milestoneTrackerContract = () => {
    console.log('CREATING MILESTONE TRACKER CONTRACT');
    return new Promise((resolve, reject) => {
        resolve({contract: web3.eth.contract(milestoneTrackerContractAbi)});
    });
}

/**********************************
    Deploy the Milestone Tracker Contract
**********************************/
const deployMilestoneTrackerContract = (...args) => {
    console.log('DEPLOYING MILESTONE TRACKER CONTRACT');
    const data = args[0];
    let dispatch = args[1];
    return new Promise((resolve, reject) => data.contract.new(
        _arbitrator,
        _donor,
        _recipient,
        {
            from: fromAccount,
            data: '',
            gas: '3900000',
            gasPrice: _gasPrice*1.05
            }, (e, contract) => {
                if(e) {
                    console.log("Error", e);
                    dispatch(showError('Mini Me Token Controller Update Failed',  e.message));
                    reject(e);
                } else if (typeof contract.address !== 'undefined') {
                    console.log('Milestone Tracker Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                    instances['milestoneTrackerContractInstance'] = data.contract.at(contract.address);
                    response.push({
                        contract: 'Milestone Tracker Contract',
                        address: contract.address,
                        transactionHash: contract.transactionHash,
                        ABI: milestoneTrackerContractAbi
                    });
                    dispatch(deploymentComplete('milestoneTrackerContract'));
                    resolve('Milestone Tracker Complete!');
                }
        }))
}

/**********************************
        AUTHORIZE SPENDER
**********************************/
const authorizeSpender = (dispatch) => {
    console.log("AUTHORIZING SPENDER");
    return new Promise((resolve, reject) => {
        instances['vaultContractInstance'].authorizeSpender(instances['milestoneTrackerContractInstance'].address, true, {from: fromAccount}, (error, result) => {
            if(error) {
                console.log("Error", e);
                dispatch(showError('Vault Spender Authorization Failed',  e.message));
                reject(e);
            } else {
                console.log(`${instances['milestoneTrackerContractInstance'].address} is now an Authorized Spender`);
                dispatch(deploymentComplete('spenderAuthorization'));
                dispatch(updateCurrentDeploymentStep('spenderAuthorization'));
                resolve('SPENDER AUTHORIZED');
            }
        });
    });
}

const givethDirectoryAbi = [
  {"constant":true,"inputs":[],"name":"numberOfCampaigns","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"description","type":"string"},{"name":"url","type":"string"},{"name":"token","type":"address"},{"name":"vault","type":"address"},{"name":"milestoneTracker","type":"address"},{"name":"extra","type":"string"}],"name":"addCampaign","outputs":[{"name":"idCampaign","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"idCampaign","type":"uint256"}],"name":"getCampaign","outputs":[{"name":"name","type":"string"},{"name":"description","type":"string"},{"name":"url","type":"string"},{"name":"token","type":"address"},{"name":"vault","type":"address"},{"name":"milestoneTracker","type":"address"},{"name":"extra","type":"string"},{"name":"status","type":"uint8"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"idCampaign","type":"uint256"},{"name":"name","type":"string"},{"name":"description","type":"string"},{"name":"url","type":"string"},{"name":"token","type":"address"},{"name":"vault","type":"address"},{"name":"milestoneTracker","type":"address"},{"name":"extra","type":"string"}],"name":"updateCampaign","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"idCampaign","type":"uint256"},{"name":"newStatus","type":"uint8"}],"name":"changeStatus","outputs":[],"payable":false,"type":"function"}
];

const getGivethDirectoryInstance = () => {
  console.log("QUERYING CAMPAIGN TRACKER");
    return new Promise((resolve, reject) => {
      resolve({contractAbi: web3.eth.contract(givethDirectoryAbi)});
    });
}

//WARNING: This only works if you are the owner of the Campaign Directory (Griff).  Comment out the corresponding lines in 'runDeployment'
const addCampaignToTracker = (...args) => {
    console.log("ADDING CAMPAIGN TO TRACKER");
    const data = args[0];
    let dispatch = args[1];
    const campaignTrackerInstance = data.contractAbi.at(_campaignTrackerAddress);
    return new Promise((resolve, reject) => {
        campaignTrackerInstance.addCampaign(
            _campaignName,
            _campaignDescription,
            _campaignUrl,
            instances['minimetokenContractInstance'].address,
            instances['vaultContractInstance'].address,
            instances['milestoneTrackerContractInstance'].address,
            _campaignExtra,
            { from: fromAccount },
            (error, result) => {
                if(error) {
                    console.log("Error", e);
                    dispatch(showError('Adding Campaign to Tracker Failed',  e.message));
                    reject(e);
                } else {
                    console.log(`${_campaignName} has been added to the Campaign Tracker`);
                    dispatch(deploymentComplete('campaignAdd'));
                    dispatch(updateCurrentDeploymentStep('campaignAdd'));
                    resolve('CAMPAIGN ADDED TO TRACKER');
                }
        });
    });
}
